@use 'mixin' as m;
@use 'variable' as v;
@use 'reset';
@use 'function' as f;

.p-header {
  background: rgb(255 255 255 / 0.8);
}

.p-header__nav {
  display: block;
  justify-content: center;
  align-items: center;
  display: flex;
  gap: f.pxToRem(32);
  
  @include m.mq('sp'){
    display: none;
  } 
}

.p-header-nav_item {
   font-size: clamp(1rem, 0.714rem + 0.6vw, 1.25rem);
   margin: auto;
   position: relative;
   
   a {
     transition: 0.5s ease-out;
     
     &::after {
       position: absolute;
       content: "";
       display: inline-block;
       width: f.pxToRem(30);
       height: f.pxToRem(1);
       bottom:-6px;
       left: 50%;
       background: v.$color-accent;
       transform: translateX(-50%) scale(0 , 1);
       transition: 0.3s ease-out;
       cursor: pointer;
     }
     
     &:hover,
     &.current {
       color: v.$color-accent;
       
       &::after {
         transform: translateX(-50%) scale(1 , 1);
       } 
     }
   }
 }

.p-header__sns-icon {
  display: flex;
  align-items: center;
  gap: f.pxToRem(16);

  rect {
    transition: .3s ease-out;
    
    &:hover {
      opacity: 1.0;
    }
  }

  @include m.mq('sp'){
    margin-top: f.pxToRem(40);
    justify-content: center;
  } 
}

/* ===============================================
drawer
=============================================== */
.p-drawer__nav {
  padding-top: f.pxToRem(20);
  display: flex;
  flex-flow: column;
  text-align: center;
}

.p-drawer-nav__item {
  gap: f.pxToRem(10);
  padding: f.pxToRem(10) 0;

  &:not(:last-child){
    border-bottom: 1px solid v.$color-font;
  }
  
  a {
    padding: 1em 0;
    width: 100%;
    display: block;
  }
}

.p-drawer__copyright {
  background: #fff;
  width: 100%;
  position: absolute;
  bottom: 0;
}


